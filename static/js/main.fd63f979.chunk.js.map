{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","components/TopNavBar.js","nba-client.js","constants.js","components/Profile.js","components/ShotChart.js","components/CounterSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","src","logo","alt","className","Component","nba","stats","playerInfo","PlayerID","fetch","then","res","json","shots","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerId","fullName","teamAbbreviation","Profile","this","props","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","React","window","d3_hexbin","hexbin","ShotChart","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","CounterSlider","state","inputValue","value","onChange","cleanValue","Number","setState","onCountSliderChange","span","min","max","style","marginLeft","DataViewContainer","count","onChartTypeChange","e","target","onTooltipChange","_","debounce","Group","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","name","handleSelectPlayer","options","key","onSearch","placeholder","size","optionLabelProp","suffix","Icon","type","Main","loadPlayerInfo","findPlayer","info","playInfo","Object","assign","commonPlayerInfo","playerHeadlineStats","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd63f979.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React, { Component } from \"react\";\nimport logo from \"../assets/images/nba-logoman-word-white.svg\";\n\nclass TopNavBar extends Component {\n  render() {\n    return (\n      <header>\n        <img src={logo} alt=\"logo\" className=\"App-logo\" />\n      </header>\n    );\n  }\n}\n\nexport default TopNavBar;\n","import nba from \"nba\";\nconst SERVER_URL = \"https://nba.laiprojects.com\"; //\"http://34.67.117.84\" //https://nba.laiprojects.com/ \"http://35.235.84.235:5000\"\nexport default {\n  ...nba,\n  stats: {\n    ...nba.stats,\n    playerInfo: function ({ PlayerID }) {\n      return fetch(`${SERVER_URL}/players/${PlayerID}`).then((res) =>\n        res.json()\n      );\n    },\n    shots: function ({ PlayerID }) {\n      return fetch(`${SERVER_URL}/players/${PlayerID}/shots`).then((res) =>\n        res.json()\n      );\n    },\n  },\n};\n","export const PROFILE_PIC_URL_PREFIX =\n  \"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190\";\nexport const TEAM_PIC_URL_PREFIX =\n  \"https://stats.nba.com/media/img/teams/logos\";\nexport const DEFAULT_PLAYER_INFO = {\n  playerId: 201939,\n  fullName: \"Stephen Curry\",\n  teamAbbreviation: \"GSW\",\n};\n","import React from \"react\";\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from \"../constants\";\n\nclass Profile extends React.Component {\n  render() {\n    const {\n      teamAbbreviation,\n      teamCity,\n      teamName,\n      playerName,\n      height,\n      weight,\n      playerId,\n      pts,\n      reb,\n      ast,\n      pie,\n    } = this.props.playerInfo;\n    return (\n      <div className=\"profile\">\n        <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n        <img\n          className=\"profile-pic\"\n          src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n          alt=\"Profile\"\n        />\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Team</div>\n          <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\n        </div>\n        <img\n          className=\"team-logo\"\n          src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n          alt=\"Team\"\n        />\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Height</div>\n          <div className=\"profile-entry-right\">{`${height}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">Weight</div>\n          <div className=\"profile-entry-right\">{`${weight}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">PTS</div>\n          <div className=\"profile-entry-right\">{`${pts}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">REB</div>\n          <div className=\"profile-entry-right\">{`${reb}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">AST</div>\n          <div className=\"profile-entry-right\">{`${ast}`}</div>\n        </div>\n        <div className=\"profile-entry\">\n          <div className=\"profile-entry-left\">PIE</div>\n          <div className=\"profile-entry-right\">{`${pie}`}</div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React from \"react\";\nimport nba from \"../nba-client\";\nimport * as d3 from \"d3\";\nimport { hexbin } from \"d3-hexbin\";\nimport { court, shots } from \"d3-shotchart\";\nimport PropTypes from \"prop-types\";\n\nwindow.d3_hexbin = { hexbin: hexbin }; // workaround library problem\n\nclass ShotChart extends React.Component {\n  static propTypes = {\n    playerId: PropTypes.number,\n    minCount: PropTypes.number,\n    chartType: PropTypes.string,\n    displayTooltip: PropTypes.bool,\n  };\n\n  componentDidUpdate() {\n    nba.stats\n      .shots({\n        PlayerID: this.props.playerId,\n      })\n      .then((response) => {\n        const final_shots = response.shot_Chart_Detail.map((shot) => ({\n          x: (shot.locX + 250) / 10,\n          y: (shot.locY + 50) / 10,\n          action_type: shot.actionType,\n          shot_distance: shot.shotDistance,\n          shot_made_flag: shot.shotMadeFlag,\n        }));\n\n        const courtSelection = d3.select(\"#shot-chart\");\n        courtSelection.html(\"\");\n        const chart_court = court().width(500);\n        const chart_shots = shots()\n          .shotRenderThreshold(this.props.minCount)\n          .displayToolTips(this.props.displayTooltip)\n          .displayType(this.props.chartType);\n        courtSelection.call(chart_court);\n        courtSelection.datum(final_shots).call(chart_shots);\n      });\n  }\n  render() {\n    return <div id=\"shot-chart\"></div>;\n  }\n}\n\nexport default ShotChart;\n","import React from \"react\";\nimport { Slider, InputNumber, Row, Col } from \"antd\";\n\nclass CounterSlider extends React.Component {\n  state = {\n    inputValue: this.props.value,\n  };\n\n  onChange = (value) => {\n    const cleanValue = Number(value) ? value : this.state.inputValue;\n    this.setState({\n      inputValue: cleanValue,\n    });\n    this.props.onCountSliderChange(cleanValue);\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={1}\n            max={20}\n            onChange={this.onChange}\n            value={this.state.inputValue}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={1}\n            max={20}\n            style={{ marginLeft: 16 }}\n            value={this.state.inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default CounterSlider;\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport { Radio, Row, Col, Switch } from \"antd\";\n\nimport ShotChart from \"./ShotChart\";\nimport CounterSlider from \"./CounterSlider\";\n\nclass DataViewContainer extends Component {\n  state = {\n    minCount: 2,\n    chartType: \"hexbin\",\n    displayTooltip: true,\n  };\n\n  onCountSliderChange = (count) => {\n    this.setState({ minCount: count });\n  };\n\n  onChartTypeChange = (e) => {\n    // console.log(e.target.value);\n    this.setState({ chartType: e.target.value });\n  };\n\n  onTooltipChange = (displayTooltip) => {\n    // console.log(displayTooltip);\n    this.setState({ displayTooltip });\n  };\n\n  render() {\n    return (\n      <div className=\"data-view\">\n        <ShotChart\n          playerId={this.props.playerId}\n          minCount={this.state.minCount}\n          chartType={this.state.chartType}\n          displayTooltip={this.state.displayTooltip}\n        />\n\n        <div className=\"filters\">\n          {this.state.chartType === \"hexbin\" ? (\n            <CounterSlider\n              value={this.state.minCount}\n              onCountSliderChange={_.debounce(this.onCountSliderChange, 500)}\n            />\n          ) : null}\n\n          <br />\n          <Row>\n            <Col span={9}>\n              <Radio.Group\n                onChange={this.onChartTypeChange}\n                value={this.state.chartType}\n              >\n                <Radio value=\"hexbin\">Hexbin</Radio>\n                <Radio value=\"scatter\">Scatter</Radio>\n              </Radio.Group>\n            </Col>\n            <Col span={4}>\n              <Switch\n                checkedChildren=\"On\"\n                unCheckedChildren=\"Off\"\n                onChange={this.onTooltipChange}\n                defaultChecked\n              />\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataViewContainer;\n","import React, { Component } from \"react\";\nimport { AutoComplete, Input } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport nba from \"../nba-client\";\nimport { PROFILE_PIC_URL_PREFIX } from \"../constants\";\n\nconst Option = AutoComplete.Option;\n\nclass SearchBar extends Component {\n  state = {\n    dataSource: [],\n  };\n\n  handleSearch = (value) => {\n    const players = nba.searchPlayers(value);\n    // console.log(players);\n\n    this.setState({\n      dataSource: !value\n        ? []\n        : nba.searchPlayers(value).map((player) => ({\n            fullName: player.fullName,\n            playerId: player.playerId,\n          })),\n    });\n  };\n\n  onSelect = (name) => {\n    this.props.handleSelectPlayer(name);\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const options = dataSource.map((player) => (\n      <Option\n        key={player.fullName}\n        value={player.fullName}\n        className=\"player-option\"\n      >\n        <img\n          className=\"player-option-image\"\n          src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}\n        />\n        <span className=\"player-option-label\">{player.fullName}</span>\n      </Option>\n    ));\n    return (\n      <AutoComplete\n        className=\"search-bar\"\n        dataSource={options}\n        onSelect={this.onSelect}\n        onSearch={this.handleSearch}\n        placeholder=\"Search NBA Player\"\n        size=\"large\"\n        optionLabelProp=\"value\"\n      >\n        <Input\n          suffix={<Icon type=\"search\" className=\"certain-category-icon\" />}\n        />\n      </AutoComplete>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\n\nimport nba from \"../nba-client\";\nimport Profile from \"./Profile\";\nimport DataViewContainer from \"./DataViewContainer\";\nimport SearchBar from \"./SearchBar\";\n\nimport { DEFAULT_PLAYER_INFO } from \"../constants\";\n\nclass Main extends Component {\n  state = {\n    playerInfo: DEFAULT_PLAYER_INFO,\n  };\n\n  componentDidMount() {\n    window.nba = nba;\n    this.loadPlayerInfo(\"Stephen Curry\");\n  }\n\n  loadPlayerInfo = (playerName) => {\n    nba.stats\n      .playerInfo({ PlayerID: nba.findPlayer(playerName).playerId })\n      .then((info) => {\n        // console.log(info);\n        const playInfo = Object.assign(\n          info.commonPlayerInfo[0],\n          info.playerHeadlineStats[0]\n        );\n        // console.log(playInfo);\n        this.setState({ playerInfo: playInfo });\n      });\n  };\n\n  handleSelectPlayer = (playerName) => {\n    this.loadPlayerInfo(playerName);\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <SearchBar handleSelectPlayer={this.handleSelectPlayer} />\n        <div className=\"player\">\n          <Profile playerInfo={this.state.playerInfo} />\n          <DataViewContainer playerId={this.state.playerInfo.playerId} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\n\nimport TopNavBar from \"./TopNavBar\";\nimport Main from \"./Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNavBar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}